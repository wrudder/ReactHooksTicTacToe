{"version":3,"sources":["helpers.js","components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","Game","useState","Array","fill","board","setBoard","xIsNext","setXIsNext","winner","winningCombo","length","console","log","a","b","c","calculateWinner","boardCopy","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAwBA,ICrBMA,EAAQ,CACZC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QASIC,EANA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,OACb,wBAAQT,MAAOA,EAAOS,QAASA,EAA/B,SACGD,KCVCR,EAAQ,CACZE,OAAQ,qBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAYDC,EAPD,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASR,EAAX,EAAWA,QAAX,OACZ,qBAAKT,MAAOA,EAAZ,SACGiB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAAgBZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,KAAzCA,SCffpB,EAAQ,CACZW,MAAO,QACPE,OAAQ,aAuCKQ,EApCF,WAAO,IAAD,EAEOC,mBAASC,MAAM,GAAGC,KAAK,OAF9B,mBAEZC,EAFY,KAELC,EAFK,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,KAIbC,EHbC,SAAyBZ,GAa9B,IAXA,IAAMa,EAAe,CACrB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGEV,EAAI,EAAGA,EAAIU,EAAaC,OAAQX,IAAK,CAC1CY,QAAQC,IAAIH,EAAaV,IADiB,kBAExBU,EAAaV,GAFW,GAEnCc,EAFmC,KAEhCC,EAFgC,KAE7BC,EAF6B,KAI1C,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACtE,OAAOnB,EAAQiB,GAGnB,OAAO,KGRMG,CAAgBZ,GAqB7B,OACE,qCACA,cAAC,EAAD,CAAOR,QAASQ,EAAOhB,QArBL,SAAAW,GAClB,IAAMkB,EAAS,YAAOb,GAElBI,GAAUS,EAAUlB,KACxBkB,EAAUlB,GAAKO,EAAU,IAAM,IAC/BD,EAASY,GACTV,GAAYD,OAgBV,sBAAK3B,MAAOA,EAAZ,UACE,4BAAI6B,EAAS,WAAaA,EAAQ,iBAAmBF,EAAU,IAAM,OARlE,wBAAQlB,QAAS,kBAAMiB,EAASH,MAAM,GAAGC,KAAK,QAA9C,+BCzBIe,EAFH,kBAAM,cAAC,EAAD,KCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1598e0ae.chunk.js","sourcesContent":["export function calculateWinner(squares) {\n\n  const winningCombo = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n  ];\n\n  for (var i = 0; i < winningCombo.length; i++) {\n      console.log(winningCombo[i])\n      const [a, b, c] = winningCombo[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nconst squares = [\n  null, null, null,\n  'x', 'x', 'o',\n  null, null, null\n];\n","import React from 'react';\n\n\nconst style = {\n  background: 'lightblue',\n  border: '2px solid darkblue',\n  fontSize: '30px',\n  fontWeight: '800',\n  cursor: 'pointer',\n  outline: 'none'\n\n}\nconst Square = ({value, onClick}) => (\n  <button style={style} onClick={onClick}>\n    {value}\n  </button>\n);\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\n\nconst style = {\n  border: '4px solid darkblue',\n  borderRadius: '10px',\n  width: '250px',\n  height: '250px',\n  margin: '0 auto',\n  display: 'grid',\n  gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\n\n\n}\n\nconst Board = ({squares, onClick}) => (\n  <div style={style}>\n    {squares.map((square, i) => (\n        <Square key={i} value={square} onClick={() => onClick(i)} />\n    ))}\n  </div>\n)\nexport default Board;\n","import React, {useState} from \"react\";\nimport {calculateWinner} from '../helpers';\nimport Board from './Board';\n\nconst style = {\n  width: '200px',\n  margin: '20px auto'\n}\n\nconst Game = () => {\n\nconst [board, setBoard] = useState(Array(9).fill(null));\nconst [xIsNext, setXIsNext] = useState(true);\nconst winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardCopy = [...board]\n    //if user clicks on occupied square or there is a winner, return\n    if (winner || boardCopy[i]) return;\n    boardCopy[i] = xIsNext ? 'x' : 'o';\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n\n  }\n\n  const jumpTo = () => {\n\n  }\n\n  const renderMoves = () => {\n    return <button onClick={() => setBoard(Array(9).fill(null))}>\n    Start Game\n    </button>\n  }\n  return (\n    <>\n    <Board squares={board} onClick={handleClick} />\n      <div style={style}>\n        <p>{winner ? 'Winner: ' + winner: 'Next Player: ' + (xIsNext ? 'x' : 'o')}</p>\n        {renderMoves()}\n      </div>\n    </>\n  )\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './components/Game';\n\nconst App = () => <Game />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}